# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
orbs:
  android: circleci/android@1.0.3
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  Debug:  
    # These next lines define the Android machine image executor: https://circleci.com/docs/2.0/executor-types/
    executor:
      name: android/android-machine

    steps:
      # Checkout the code as the first step.
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
    # The next step will run the unit tests
      - android/run-tests:
          test-command: ./gradlew testDebug --continue
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
              mkdir -p ~/test-results/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

      
      #- android/run-tests:
          #test-command: ./gradlew testDebug --continue
          #test-command: ./gradlew test --continue
     

     # Then start the emulator and run the Instrumentation tests!
     # - android/start-emulator-and-run-tests:
     #     test-command: ./gradlew connectedDebugAndroidTest
     #     system-image: system-images;android-25;google_apis;x86

      # And finally run the release build
      - run:
          name: Assemble release debug
          command:
            # ./gradlew assembleDebug
            ./gradlew assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
      - store_test_results:
          path: app/build/test-results/debug

  Release:  
    executor:
      name: android/android-machine
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - android/run-tests:
          test-command: ./gradlew testDebug --continue
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
              mkdir -p ~/test-results/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - run:
          name: Assemble release debug
          command:
            ./gradlew assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
      - store_test_results:
          path: app/build/test-results/debug

workflows:
  version: 2
  android_build:
    jobs:
      - Debug:
          filters:
            branches:
              only:
                - circleci-project-setup
      - Release:
          filters:
            branches:
              only:
                - circleci
              
      
        